library(tidyverse)
#=============================================================================
supplyParams <- c("QSXAgg -- Total Production",
                  "TAreaXAgg -- Total Area",
                  "AnmlNumXAgg -- Animal Numbers",
                  "QMXAgg -- Import",
                  "PPXAgg -- Producer Prices",
                  "PCXAgg -- Consumer Prices",
                  "PEXAgg -- Export Prices",
                  "PWXAgg -- World Prices")
# "TYldXAgg -- Total Yield", - to be calculated after aggregation of production and area
# "AnmlYldXAgg -- Animal Yield", - to be calculated after aggregation of production and area

demandParams <- c("QHDXAgg -- Household Demand",
                  "QEXAgg -- Export",
                  "QLXAgg -- Livestock Feed Demand",
                  "QINTXAgg -- Intermediate Demand",
                  "QOTHRXAgg -- Other Demand",
                  "QDXAgg -- Total Demand")

foodAvailParams <- c("PerCapKCalXAgg",
                     "PerCapKCalCXAgg -- PcKcal by Commodity",
                     "PopulationAtRiskXagg - Pop at Risk of Hunger",
                     "TotalMalnourishedXagg -- Malnurished Children",
                     "PopXAgg -- Population")
# "QMSHXAgg -- Import Share of Demand", - to be calculated after aggregation of imports and total demand
# "ShareAtRiskXagg -- Share at Risk of Hunger", - to be calculated after aggregation of population and pop at risk of hunger

# supply_params <- c("Area",
#                    "Production",
#                    "Yield",
#                    "Animal Numbers",
#                    "Animal Yield")

# demand_params <- c("Household Demand",
#                    "Export",
#                    "Livestock\nFeed Demand",
#                    "Intermediate Demand",
#                    "Other Demand")
# foodSec_params <- c("Availability\n(kcal/capita/day)",
#                     "Share at Risk of Hunger",
#                     "undernourished Children",
#                     "Import Share of Demand")

paramVec <- c(supplyParams,
              demandParams,
              foodAvailParams)

commodVec <- c("CER-Wheat",
                        "CER",
                        "R&T",
                        "PUL",
                        "OLS",
               "AllA")

# forTotKcalPcap <- c("CER", "OLS", "AllA", "R&T",
#                     "F&V", "PUL", "SGR")
#regionVec <- c("SSA", "EUR", "LAC", "NAM", "MEN", "EAP", "SAS", "FSU", "WLD")
#=================================================================
# Import raw IMPACT output file (generated using ReportGen.xlsx)
#-----------------------------------------------------------------
this_folder <- "E:/BSCHIEK/"
# this_subfolder <- "2Blades WSR IMPACT/New run/"
this_subfolder <- "IMPACT3-Model-ver3.3/OutputFiles/Aggregation/"
this_fileName <- "WSR2_ssp2_rcp45.csv"
this_filePath <- paste0(this_folder, this_subfolder, this_fileName)
df_raw <- read.csv(this_filePath, stringsAsFactors = F)
df <- subset(df_raw, impactparameter %in% paramVec &
                    commodity %in% c(commodVec, "-") &
                    year >= 2024)
colnames(df)[which(colnames(df) == "impactparameter")] <- "param"
#=================================================================
# Process the IMPACT file
#-----------------------------------------------------------------
# HH demand
# Let's use "QHDXAgg -- Household Demand", which is disggregated by commodity
# It is also disaggregated by rural and urban, which Tim says is experimental
# So have to make sure and use the total HH
# The alternative param "QFXAgg -- Household Demand" is aggregated to country level
# which does not allow examination of HH demand for specific commodities
df <- subset(df, param != "QFXAgg -- Household Demand")
# Aggregate rural and urban HH demand
df_hh <- subset(df, param == "QHDXAgg -- Household Demand")
df <- subset(df, param != "QHDXAgg -- Household Demand")
df_hh <- df_hh %>% group_by(param, scenario, commodity,
                            region, year) %>% summarize(Val = sum(Val))
df_hh$productiontype <- "total"
df <- as.data.frame(rbind(df, df_hh[, colnames(df)]))
# Don't need productiontype column anymore
df$productiontype <- NULL
#--------------------------------------------------------------
# Fix parameter names
# Get rid of the weird prefix
df$param <- gsub("^.*\\-- ", "", df$param)
# Get rid of "Total" before "Total Yield", "Total Area", "Total Production"
# ("Total" just means that we are talking about both irrigated and rainfed)
# But keep "Total" for "Total Demand"
indRmTotal <- which(df$param %in% c("Total Yield", "Total Area", "Total Production"))
df$param[indRmTotal] <- gsub("Total ", "", df$param[indRmTotal])
# Fix "PopulationAtRiskXagg - Pop at Risk of Hunger"
df$param <- gsub("PopulationAtRiskXagg - ", "", df$param)
# Fix "PerCapKCalXAgg" (total kcal per capita per day)
df$param[grep("PerCapKCalXAgg", df$param)] <- "Total Availability\n(kcal/capita/day)"
# Fix "PcKcal by Commodity" (kcal per capita per day by commodity)
df$param[grep("PcKcal by Commodity", df$param)] <- "Availability\n(kcal/capita/day)"
# Fix "Malnurished children"
df$param <- gsub("Malnurished", "Undernourished", df$param)
#--------------------------------------------------------------
# Calculate country and country-commodity level kcal availability
# as the per capita values times population
# (This is necessary for subsequent aggregation
# of the kcal availability params - per cap values will be calculated
# after aggregation)
# Note that kcal availability is reported in IMPACT only every 5 years
# The values for other years are NA
#---
# First country level
dfKcalCty <- df %>% subset(param %in% c("Total Availability\n(kcal/capita/day)", "Population")) %>%
  spread(param, Val) %>% as.data.frame()
dfKcalCty$`Total Availability\n(kcal/day)` <- dfKcalCty$`Total Availability\n(kcal/capita/day)` * dfKcalCty$Population * 10^6
dfKcalCty$`Total Availability\n(kcal/capita/day)` <- NULL
# Save pop df for merge with country-commod level kcal below
dfPop <- dfKcalCty[, c("scenario", "year", "region", "Population")]
dfKcalCty$Population <- NULL
colnames(dfKcalCty)[ncol(dfKcalCty)] <- "Val"
dfKcalCty$param <- "Total Availability\n(kcal/day)"
dfKcalCty <- dfKcalCty[, colnames(df)]
#---
# Now for country-commodity level
dfKcalCommod <- df %>% subset(param == "Availability\n(kcal/capita/day)") %>%
  spread(param, Val) %>% as.data.frame() %>% merge(dfPop, by = c("scenario", "year", "region"))
dfKcalCommod$`Availability\n(kcal/day)` <- dfKcalCommod$`Availability\n(kcal/capita/day)` * dfKcalCommod$Population * 10^6
dfKcalCommod$`Availability\n(kcal/capita/day)` <- NULL
dfKcalCommod$Population <- NULL
colnames(dfKcalCommod)[ncol(dfKcalCommod)] <- "Val"
dfKcalCommod$param <- "Availability\n(kcal/day)"
dfKcalCommod <- dfKcalCommod[, colnames(df)]
#---
# Remove the per cap kcal params from the main df
# (Will be recalculated after aggregation)
df <- subset(df, !(param %in% c("Total Availability\n(kcal/capita/day)",
                                "Availability\n(kcal/capita/day)")))
# Put the new non per cap kcal params together with the main df
thisList <- list(df, dfKcalCty, dfKcalCommod)
df <- as.data.frame(do.call(rbind, thisList))
#--------------------------------------------------------------
# For aggregation it is necessary to separate impact params into
# commodity level, country level, and prices
commodLevParams <- c("Total Demand", "Other Demand",
                     "Production", "Area", "Animal Numbers",
                     "Availability\n(kcal/day)",
                     "Intermediate Demand",
                     "Export", "Import", "Household Demand")
priceParams <- c("Consumer Prices",
                 "Export Prices",
                 "Producer Prices",
                 "World Prices")
ctyLevParams <- setdiff(unique(df$param),
                        c(commodLevParams, priceParams))
  
#--------------------------------------------------------------
# Create non-wheat cereals commodity (for commod level params only)
dfCER <- df %>% subset(commodity %in% c("CER", "CER-Wheat") &
                              param %in% commodLevParams) %>%
  spread(commodity, Val) %>% as.data.frame()
dfCER$`Other cereals` <- dfCER$CER - dfCER$`CER-Wheat`
dfCER <- dfCER %>% gather(commodity, Val, CER:`Other cereals`) %>%
  subset(commodity == "Other cereals")
df <- as.data.frame(rbind(df, dfCER))
#--------------------------------------------------------------
# Fix geography
# Separate country and region columns
df$Region <- gsub("\\-.*", "", df$region)
df$Country <- gsub("^.*\\-", "", df$region)
df$region <- NULL
# Rename regions
df$Region[which(df$Region == "SSA")] <- "Africa South\nof the Sahara"
df$Region[which(df$Region == "SAS")] <- "South Asia"
df$Region[which(df$Region == "NAM")] <- "N. America"
df$Region[which(df$Region == "MEN")] <- "West Asia &\nNorth Africa"
df$Region[which(df$Region == "LAC")] <- "Latin America\n& Caribbean"
df$Region[which(df$Region == "FSU")] <- "Russia &\nCentral Asia"
df$Region[which(df$Region == "EUR")] <- "Europe"
df$Region[which(df$Region == "EAP")] <- "East Asia &\nPacific"
df$Region[which(df$Region == "WLD")] <- "World"
# Fine tune region groupings
# Move Ukraine and Belarus from FSU to Europe
df$Region[which(df$Country == "Ukraine")] <- "Europe"
df$Region[which(df$Country == "Belarus")] <- "Europe"
# Move Afghanistan from South Asia to Central Asia
df$Region[which(df$Country == "Afghanistan")] <- "Russia & Central Asia"
# Move Iran from West Asia to Central Asia
df$Region[which(df$Country == "Iran")] <- "Russia & Central Asia"
# Drop Greenland, DVD, EAS, and DVG
df <- subset(df, !(Country %in% c("Greenland", "DVD", "DVG", "EAS")))
# Get rid of default regional aggregates
dropVec <- c("SSA", "EUR", "LAC", "NAM", "MEN", "EAP", "SAS", "FSU", "WLD")
df <- subset(df, !(Country %in% dropVec))
#--------------------------------------------------------------
# Now have to reaggregate all parameters up to the newly defined regions
# This has to be done separately for country-commodity level and country level params
#---
# First the easy part - params at country-commodity level
dfAgg1 <- df %>% subset(param %in% commodLevParams) %>% group_by(param, scenario,
                              commodity,
                              year, Region) %>%
  summarize(Val = sum(Val, na.rm = T)) %>% as.data.frame()
#---
# Calculate yields from crops and animals
# First crops
dfAggYd <- subset(dfAgg1, param %in% c("Area", "Production") &
                    commodity != "AllA")
dfAggYd <- dfAggYd %>% spread(param, Val)
dfAggYd$Yield <- dfAggYd$Production / dfAggYd$Area
dfAggYd$Area <- NULL; dfAggYd$Production <- NULL
colnames(dfAggYd)[ncol(dfAggYd)] <- "Val"
dfAggYd$param <- "Yield"
dfAggYd <- dfAggYd[, colnames(dfAgg1)]
# Then animals
dfAggAnimYd <- subset(dfAgg1, param %in% c("Animal Numbers", "Production") &
                        commodity == "AllA")
dfAggAnimYd <- dfAggAnimYd %>% spread(param, Val)
dfAggAnimYd$`Animal Yield` <- dfAggAnimYd$Production / dfAggAnimYd$`Animal Numbers`
dfAggAnimYd$Area <- NULL; dfAggAnimYd$Production <- NULL
colnames(dfAggAnimYd)[ncol(dfAggAnimYd)] <- "Val"
dfAggAnimYd$param <- "Yield"
dfAggAnimYd <- dfAggAnimYd[, colnames(dfAgg1)]
#---
# Calculate Import Share of Demand
dfAggISofD <- dfAgg1 %>% subset(param %in% c("Import",
                                                       "Total Demand")) %>%
  spread(param, Val) %>% as.data.frame()
dfAggISofD$`Import Share of Demand` <- dfAggISofD$Import / dfAggISofD$`Total Demand`
dfAggISofD$`Total Demand` <- NULL; dfAggISofD$Import <- NULL
colnames(dfAggISofD)[ncol(dfAggISofD)] <- "Val"
dfAggISofD$param <- "Import Share of Demand"
dfAggISofD <- dfAggISofD[, colnames(dfAgg1)]
#---
# Put it together
dfAgg1 <- as.data.frame(do.call(rbind, list(dfAgg1, dfAggYd, dfAggAnimYd, dfAggISofD)))
rm(dfAggYd, dfAggAnimYd, dfAggISofD)
#---
# Now params at country level
# Non price country level params are summed
dfAgg2sum <- df %>% subset(param %in% ctyLevParams) %>%
  group_by(param, scenario, commodity, year, Region) %>%
  summarize(Val = sum(Val, na.rm = T)) %>% as.data.frame()
# Calculate Share at risk of hunger
# Note that pop at risk of hunger is reported in IMPACT only every 5 years
# The values for other years are NA
dfPaRofH <- dfAgg2sum %>% subset(param %in% c("Pop at Risk of Hunger",
                                           "Population")) %>%
  spread(param, Val) %>% as.data.frame()
dfPaRofH$`Share at Risk of Hunger` <- dfPaRofH$`Pop at Risk of Hunger` / dfPaRofH$Population
# Price country level params are averaged
# Separate out world price b/c it is world-level
dfWldPrice <- subset(df, param == "World Prices")
dfWldPrice$Country <- NULL
dfAgg2mean <- df %>% subset(param %in% priceParams &
                              param != "World Prices") %>%
  group_by(param, scenario, commodity, year, Region) %>%
  summarize(Val = mean(Val, na.rm = T)) %>% as.data.frame()
# Put it together
dfAgg2 <- as.data.frame(do.call(rbind, list(dfAgg2sum, dfAgg2mean,
                                            dfWldPrice)))
rm(dfAgg2sum, dfAgg2mean, dfWldPrice)
#---
df <- as.data.frame(rbind(dfAgg1, dfAgg2))
#------------------------------------------------------------------
# Fix commodity names
u <- df$commodity
df$commodity[grep("AllA", u)] <- "Animal products"
df$commodity[which(u == "CER")] <- "Cereals"
df$commodity[which(u == "CER-Wheat")] <- "Wheat"
df$commodity[grep("R&T", u)] <- "Roots & tubers"
df$commodity[grep("OLS", u)] <- "Oilseeds"
df$commodity[grep("PUL", u)] <- "Pulses"
#------------------------------------------------------------------
# Create scenario names
u <- df$scenario
df$scenario[which(u == "NoWSR_ssp2_rcp45_hgem")] <- "CC No WSR"
df$scenario[which(u == "WSRwrst_ssp2_rcp45_hgem")] <- "CC+WSR (worst case)"
df$scenario[which(u == "WSRbest_ssp2_rcp45_hgem")] <- "CC+WSR (best case)"
# Set year to integer
df$year <- as.integer(df$year)
#==================================================================
#==================================================================
#==================================================================
#==================================================================











this_commodVec <- unique(c(commodVec_overView, forTotKcalPcap, "-"))
df <- subset(df_raw, param %in% paramVec &
                    region %in% regionVec &
                    commodity %in% this_commodVec)
df_overView <- process_df(df, commodVec_overView, paramVec)
#rm(df_raw, df)

paramsList <- list(supplyParams, demandParams, foodAvailParams)
for(i in 1:length(paramsList)){
  this_paramVec <- paramsList[[i]]
  this_paramVec <- gsub("^.*\\-- ", "", this_paramVec)
  this_paramVec <- gsub("Total ", "", this_paramVec)
  this_paramVec <- gsub("PopulationAtRiskXagg - ", "", this_paramVec)
  this_paramVec[grep("PcKcal", this_paramVec)] <- "Availability\n(kcal/capita/day)"
  this_paramVec <- gsub("Malnurished", "Undernourished", this_paramVec)
  paramsList[[i]] <- this_paramVec
}
supplyParams <- paramsList[[1]]
demandParams <- paramsList[[2]]
foodAvailParams <- paramsList[[3]]
demandParams <- c("HH Demand Rural",
                  "HH Demand Urban",
                  "Export",
                  "Livestock\nFeed Demand",
                  "Intermediate Demand",
                  "Other Demand",
                  "Total Demand")

colnames(df) <- c("Region", "param", "Commodity", "Year", "Scenario", "Val") 
df <- subset(df, Year != 2005 & Commodity != "CER")

colnames(df_overView) <- c("Region", "param", "Commodity", "Year", "Scenario", "Val") 
df_overView <- subset(df_overView, Year != 2005)

#==========================================================================
# Plotting parameters
title_size <- 9
subtitle_size <- 8
legendText_size <- 8
axisText_size <- 8
axisTitle_size <- 8
facetTitle_size <- 8
cellText_size <- 3
#==========================================================================
theseCommods <- c("Pulses", "Wheat", "Other cereals", "Oilseeds", "Roots & tubers")
